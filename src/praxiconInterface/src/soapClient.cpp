/* soapClient.cpp
   Generated by gSOAP 2.7.17 from quote.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "include/iCub/soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.17 2014-03-06 15:04:58 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__HelloWorld(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__HelloWorld *ns1__HelloWorld_, ns1__HelloWorldResponse *ns1__HelloWorldResponse_)
{	struct __ns1__HelloWorld soap_tmp___ns1__HelloWorld;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:25191/PraxiconWebService/PraxiconTreeService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__HelloWorld.ns1__HelloWorld_ = ns1__HelloWorld_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__HelloWorld(soap, &soap_tmp___ns1__HelloWorld);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__HelloWorld(soap, &soap_tmp___ns1__HelloWorld, "-ns1:HelloWorld", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__HelloWorld(soap, &soap_tmp___ns1__HelloWorld, "-ns1:HelloWorld", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__HelloWorldResponse_)
		return soap_closesock(soap);
	ns1__HelloWorldResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__HelloWorldResponse_->soap_get(soap, "ns1:HelloWorldResponse", "ns1:HelloWorldResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__queryPRAXICON(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__queryPRAXICON *ns1__queryPRAXICON_, ns1__queryPRAXICONResponse *ns1__queryPRAXICONResponse_)
{	struct __ns1__queryPRAXICON soap_tmp___ns1__queryPRAXICON;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:25191/PraxiconWebService/PraxiconTreeService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__queryPRAXICON.ns1__queryPRAXICON_ = ns1__queryPRAXICON_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__queryPRAXICON(soap, &soap_tmp___ns1__queryPRAXICON);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__queryPRAXICON(soap, &soap_tmp___ns1__queryPRAXICON, "-ns1:queryPRAXICON", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__queryPRAXICON(soap, &soap_tmp___ns1__queryPRAXICON, "-ns1:queryPRAXICON", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__queryPRAXICONResponse_)
		return soap_closesock(soap);
	ns1__queryPRAXICONResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__queryPRAXICONResponse_->soap_get(soap, "ns1:queryPRAXICONResponse", "ns1:queryPRAXICONResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
