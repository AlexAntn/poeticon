/* quote.h
   Generated by wsdl2h 1.2.17 from http://localhost:25191/PraxiconWebService/PraxiconTreeService?WSDL and typemap.dat
   2014-03-06 15:04:35 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on quote.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://webservice.praxicon.poeticon.csri/                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://webservice.praxicon.poeticon.csri/"
ns2 = ""
ns2 = ""
ns3 = "http://jaxb.dev.java.net/array"

*/

#define SOAP_NAMESPACE_OF_ns2	""
//gsoap ns2   schema namespace:	
//gsoap ns2   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns2	""
//gsoap ns2   schema namespace:	
//gsoap ns2   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns1	"http://webservice.praxicon.poeticon.csri/"
//gsoap ns1   schema namespace:	http://webservice.praxicon.poeticon.csri/
//gsoap ns1   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns3	"http://jaxb.dev.java.net/array"
//gsoap ns3   schema namespace:	http://jaxb.dev.java.net/array
//gsoap ns3   schema form:	unqualified
class xsd__anyType { _XML __item; struct soap *soap; };

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:byte".
typedef char xsd__byte;

/// Class wrapper for built-in type "xs:byte" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__byte_ to check runtime type (see soapStub.h)
class xsd__byte_ : public xsd__anyType
{ public:
    xsd__byte                            __item;                       
};

/// Class wrapper for built-in type "xs:string" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__string to check runtime type (see soapStub.h)
class xsd__string : public xsd__anyType
{ public:
    std::string                          __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns1__HelloWorld.
class ns1__HelloWorld;

//  Forward declaration of class ns1__HelloWorldResponse.
class ns1__HelloWorldResponse;

//  Forward declaration of class ns1__queryPRAXICON.
class ns1__queryPRAXICON;

//  Forward declaration of class ns1__queryPRAXICONResponse.
class ns1__queryPRAXICONResponse;

//  Forward declaration of class ns1__iitResponse.
class ns1__iitResponse;

//  Forward declaration of class ns1__iitAction.
class ns1__iitAction;

//  Forward declaration of class ns1__iitObject.
class ns1__iitObject;

//  Forward declaration of class ns3__byteArray.
class ns3__byteArray;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://webservice.praxicon.poeticon.csri/                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://jaxb.dev.java.net/array                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://webservice.praxicon.poeticon.csri/                                *
 *                                                                            *
\******************************************************************************/


/// "http://webservice.praxicon.poeticon.csri/":HelloWorld is a complexType.
class ns1__HelloWorld : public xsd__anyType
{ public:
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Optional element.
};

/// "http://webservice.praxicon.poeticon.csri/":HelloWorldResponse is a complexType.
class ns1__HelloWorldResponse : public xsd__anyType
{ public:
/// Element return of type xs:string.
    std::string*                         return_                        0;	///< Optional element.
};

/// "http://webservice.praxicon.poeticon.csri/":queryPRAXICON is a complexType.
class ns1__queryPRAXICON : public xsd__anyType
{ public:
/// Vector of xsd__anyType* with length 0..unbounded
    std::vector<xsd__anyType*          > objectsAround                  0;
/// Element query of type xs:string.
    std::string*                         query                          0;	///< Optional element.
/// Vector of xsd__anyType* with length 0..unbounded
    std::vector<xsd__anyType*          > noObjects                      0;
};

/// "http://webservice.praxicon.poeticon.csri/":queryPRAXICONResponse is a complexType.
class ns1__queryPRAXICONResponse : public xsd__anyType
{ public:
/// Element return of type "http://webservice.praxicon.poeticon.csri/":iitResponse.
    ns1__iitResponse*                    return_                        0;	///< Optional element.
};

/// "http://webservice.praxicon.poeticon.csri/":iitResponse is a complexType.
class ns1__iitResponse : public xsd__anyType
{ public:
/// Vector of ns1__iitAction* with length 0..unbounded
    std::vector<ns1__iitAction*        > response                       0;	///< Nullable pointer.
};

/// "http://webservice.praxicon.poeticon.csri/":iitAction is a complexType.
class ns1__iitAction : public xsd__anyType
{ public:
/// Element movement of type xs:string.
    std::string*                         movement                       0;	///< Optional element.
/// Element object1 of type "http://webservice.praxicon.poeticon.csri/":iitObject.
    ns1__iitObject*                      object1                        0;	///< Optional element.
/// Element object2 of type "http://webservice.praxicon.poeticon.csri/":iitObject.
    ns1__iitObject*                      object2                        0;	///< Optional element.
};

/// "http://webservice.praxicon.poeticon.csri/":iitObject is a complexType.
class ns1__iitObject : public xsd__anyType
{ public:
/// Vector of ns3__byteArray* with length 0..unbounded
    std::vector<ns3__byteArray*        > images                         0;	///< Nullable pointer.
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Optional element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://jaxb.dev.java.net/array                                           *
 *                                                                            *
\******************************************************************************/


/// "http://jaxb.dev.java.net/array":byteArray is a complexType.
class ns3__byteArray : public xsd__anyType
{ public:
/// Vector of xsd__byte with length 0..unbounded
    std::vector<xsd__byte              > item                           0;	///< Nullable pointer.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://webservice.praxicon.poeticon.csri/                                *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://webservice.praxicon.poeticon.csri/":HelloWorld of type "http://webservice.praxicon.poeticon.csri/":HelloWorld.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://webservice.praxicon.poeticon.csri/":HelloWorldResponse of type "http://webservice.praxicon.poeticon.csri/":HelloWorldResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://webservice.praxicon.poeticon.csri/":queryPRAXICON of type "http://webservice.praxicon.poeticon.csri/":queryPRAXICON.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://webservice.praxicon.poeticon.csri/":queryPRAXICONResponse of type "http://webservice.praxicon.poeticon.csri/":queryPRAXICONResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://webservice.praxicon.poeticon.csri/                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://jaxb.dev.java.net/array                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://jaxb.dev.java.net/array                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	PraxiconTreePortBinding 
//gsoap ns1  service type:	PraxiconTree 
//gsoap ns1  service port:	http://localhost:25191/PraxiconWebService/PraxiconTreeService 
//gsoap ns1  service namespace:	http://webservice.praxicon.poeticon.csri/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage PraxiconTreeService Definitions

@section PraxiconTreeService_bindings Service Bindings

  - @ref PraxiconTreePortBinding

@section PraxiconTreeService_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page PraxiconTreePortBinding Binding "PraxiconTreePortBinding"

@section PraxiconTreePortBinding_operations Operations of Binding  "PraxiconTreePortBinding"

  - @ref __ns1__HelloWorld

  - @ref __ns1__queryPRAXICON

@section PraxiconTreePortBinding_ports Endpoints of Binding  "PraxiconTreePortBinding"

  - http://localhost:25191/PraxiconWebService/PraxiconTreeService

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PraxiconTreePortBinding                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__HelloWorld                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__HelloWorld" of service binding "PraxiconTreePortBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - Addressing action="http://webservice.praxicon.poeticon.csri/PraxiconTree/HelloWorldRequest"

  - Addressing response action="http://webservice.praxicon.poeticon.csri/PraxiconTree/HelloWorldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__HelloWorld(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns1__HelloWorld*                    ns1__HelloWorld_,
    // response parameters:
    ns1__HelloWorldResponse*            ns1__HelloWorldResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__HelloWorld(
    struct soap *soap,
    // request parameters:
    ns1__HelloWorld*                    ns1__HelloWorld_,
    // response parameters:
    ns1__HelloWorldResponse*            ns1__HelloWorldResponse_
  );
@endcode

C++ proxy class (defined in soapPraxiconTreePortBindingProxy.h):
@code
  class PraxiconTreePortBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPraxiconTreePortBindingService.h):
@code
  class PraxiconTreePortBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	HelloWorld document
//gsoap ns1  service method-encoding:	HelloWorld literal
//gsoap ns1  service method-action:	HelloWorld ""
int __ns1__HelloWorld(
    ns1__HelloWorld*                    ns1__HelloWorld_,	///< Request parameter
    ns1__HelloWorldResponse*            ns1__HelloWorldResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__queryPRAXICON                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__queryPRAXICON" of service binding "PraxiconTreePortBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - Addressing action="http://webservice.praxicon.poeticon.csri/PraxiconTree/queryPRAXICONRequest"

  - Addressing response action="http://webservice.praxicon.poeticon.csri/PraxiconTree/queryPRAXICONResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__queryPRAXICON(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns1__queryPRAXICON*                 ns1__queryPRAXICON_,
    // response parameters:
    ns1__queryPRAXICONResponse*         ns1__queryPRAXICONResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__queryPRAXICON(
    struct soap *soap,
    // request parameters:
    ns1__queryPRAXICON*                 ns1__queryPRAXICON_,
    // response parameters:
    ns1__queryPRAXICONResponse*         ns1__queryPRAXICONResponse_
  );
@endcode

C++ proxy class (defined in soapPraxiconTreePortBindingProxy.h):
@code
  class PraxiconTreePortBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPraxiconTreePortBindingService.h):
@code
  class PraxiconTreePortBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	queryPRAXICON document
//gsoap ns1  service method-encoding:	queryPRAXICON literal
//gsoap ns1  service method-action:	queryPRAXICON ""
int __ns1__queryPRAXICON(
    ns1__queryPRAXICON*                 ns1__queryPRAXICON_,	///< Request parameter
    ns1__queryPRAXICONResponse*         ns1__queryPRAXICONResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns2 Top-level root elements of schema ""

@section ns2 Top-level root elements of schema ""

@section ns1 Top-level root elements of schema "http://webservice.praxicon.poeticon.csri/"

  - <ns1:HelloWorld> (use wsdl2h option -g to auto-generate)

  - <ns1:HelloWorldResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:queryPRAXICON> (use wsdl2h option -g to auto-generate)

  - <ns1:queryPRAXICONResponse> (use wsdl2h option -g to auto-generate)

@section ns3 Top-level root elements of schema "http://jaxb.dev.java.net/array"

*/

/* End of quote.h */
