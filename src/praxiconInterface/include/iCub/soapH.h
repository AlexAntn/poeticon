/* soapH.h
   Generated by gSOAP 2.7.17 from quote.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (10)
#endif

#define soap_default_xsd__byte(soap, a) soap_default_byte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_xsd__byte(struct soap*, const char*, char *, const char*);

#define soap_write_xsd__byte(soap, data) ( soap_begin_send(soap) || soap_put_xsd__byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__byte(struct soap*, const char *, const char*, const char*);

#define soap_read_xsd__byte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_xsd__byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_ns3__byteArray
#define SOAP_TYPE_ns3__byteArray (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__byteArray(struct soap*, const char*, int, const ns3__byteArray *, const char*);
SOAP_FMAC3 ns3__byteArray * SOAP_FMAC4 soap_in_ns3__byteArray(struct soap*, const char*, ns3__byteArray *, const char*);

#define soap_write_ns3__byteArray(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns3__byteArray(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__byteArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns3__byteArray * SOAP_FMAC4 soap_get_ns3__byteArray(struct soap*, ns3__byteArray *, const char*, const char*);

#define soap_new_ns3__byteArray(soap, n) soap_instantiate_ns3__byteArray(soap, n, NULL, NULL, NULL)


#define soap_delete_ns3__byteArray(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns3__byteArray * SOAP_FMAC2 soap_instantiate_ns3__byteArray(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__byteArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__iitObject
#define SOAP_TYPE_ns1__iitObject (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__iitObject(struct soap*, const char*, int, const ns1__iitObject *, const char*);
SOAP_FMAC3 ns1__iitObject * SOAP_FMAC4 soap_in_ns1__iitObject(struct soap*, const char*, ns1__iitObject *, const char*);

#define soap_write_ns1__iitObject(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__iitObject(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__iitObject(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__iitObject * SOAP_FMAC4 soap_get_ns1__iitObject(struct soap*, ns1__iitObject *, const char*, const char*);

#define soap_new_ns1__iitObject(soap, n) soap_instantiate_ns1__iitObject(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__iitObject(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__iitObject * SOAP_FMAC2 soap_instantiate_ns1__iitObject(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__iitObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__iitAction
#define SOAP_TYPE_ns1__iitAction (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__iitAction(struct soap*, const char*, int, const ns1__iitAction *, const char*);
SOAP_FMAC3 ns1__iitAction * SOAP_FMAC4 soap_in_ns1__iitAction(struct soap*, const char*, ns1__iitAction *, const char*);

#define soap_write_ns1__iitAction(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__iitAction(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__iitAction(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__iitAction * SOAP_FMAC4 soap_get_ns1__iitAction(struct soap*, ns1__iitAction *, const char*, const char*);

#define soap_new_ns1__iitAction(soap, n) soap_instantiate_ns1__iitAction(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__iitAction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__iitAction * SOAP_FMAC2 soap_instantiate_ns1__iitAction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__iitAction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__iitResponse
#define SOAP_TYPE_ns1__iitResponse (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__iitResponse(struct soap*, const char*, int, const ns1__iitResponse *, const char*);
SOAP_FMAC3 ns1__iitResponse * SOAP_FMAC4 soap_in_ns1__iitResponse(struct soap*, const char*, ns1__iitResponse *, const char*);

#define soap_write_ns1__iitResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__iitResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__iitResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__iitResponse * SOAP_FMAC4 soap_get_ns1__iitResponse(struct soap*, ns1__iitResponse *, const char*, const char*);

#define soap_new_ns1__iitResponse(soap, n) soap_instantiate_ns1__iitResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__iitResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__iitResponse * SOAP_FMAC2 soap_instantiate_ns1__iitResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__iitResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__queryPRAXICONResponse
#define SOAP_TYPE_ns1__queryPRAXICONResponse (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__queryPRAXICONResponse(struct soap*, const char*, int, const ns1__queryPRAXICONResponse *, const char*);
SOAP_FMAC3 ns1__queryPRAXICONResponse * SOAP_FMAC4 soap_in_ns1__queryPRAXICONResponse(struct soap*, const char*, ns1__queryPRAXICONResponse *, const char*);

#define soap_write_ns1__queryPRAXICONResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__queryPRAXICONResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__queryPRAXICONResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__queryPRAXICONResponse * SOAP_FMAC4 soap_get_ns1__queryPRAXICONResponse(struct soap*, ns1__queryPRAXICONResponse *, const char*, const char*);

#define soap_new_ns1__queryPRAXICONResponse(soap, n) soap_instantiate_ns1__queryPRAXICONResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__queryPRAXICONResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__queryPRAXICONResponse * SOAP_FMAC2 soap_instantiate_ns1__queryPRAXICONResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__queryPRAXICONResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__queryPRAXICON
#define SOAP_TYPE_ns1__queryPRAXICON (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__queryPRAXICON(struct soap*, const char*, int, const ns1__queryPRAXICON *, const char*);
SOAP_FMAC3 ns1__queryPRAXICON * SOAP_FMAC4 soap_in_ns1__queryPRAXICON(struct soap*, const char*, ns1__queryPRAXICON *, const char*);

#define soap_write_ns1__queryPRAXICON(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__queryPRAXICON(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__queryPRAXICON(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__queryPRAXICON * SOAP_FMAC4 soap_get_ns1__queryPRAXICON(struct soap*, ns1__queryPRAXICON *, const char*, const char*);

#define soap_new_ns1__queryPRAXICON(soap, n) soap_instantiate_ns1__queryPRAXICON(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__queryPRAXICON(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__queryPRAXICON * SOAP_FMAC2 soap_instantiate_ns1__queryPRAXICON(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__queryPRAXICON(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__HelloWorldResponse
#define SOAP_TYPE_ns1__HelloWorldResponse (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__HelloWorldResponse(struct soap*, const char*, int, const ns1__HelloWorldResponse *, const char*);
SOAP_FMAC3 ns1__HelloWorldResponse * SOAP_FMAC4 soap_in_ns1__HelloWorldResponse(struct soap*, const char*, ns1__HelloWorldResponse *, const char*);

#define soap_write_ns1__HelloWorldResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__HelloWorldResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__HelloWorldResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__HelloWorldResponse * SOAP_FMAC4 soap_get_ns1__HelloWorldResponse(struct soap*, ns1__HelloWorldResponse *, const char*, const char*);

#define soap_new_ns1__HelloWorldResponse(soap, n) soap_instantiate_ns1__HelloWorldResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__HelloWorldResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__HelloWorldResponse * SOAP_FMAC2 soap_instantiate_ns1__HelloWorldResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__HelloWorldResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__HelloWorld
#define SOAP_TYPE_ns1__HelloWorld (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__HelloWorld(struct soap*, const char*, int, const ns1__HelloWorld *, const char*);
SOAP_FMAC3 ns1__HelloWorld * SOAP_FMAC4 soap_in_ns1__HelloWorld(struct soap*, const char*, ns1__HelloWorld *, const char*);

#define soap_write_ns1__HelloWorld(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__HelloWorld(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__HelloWorld(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__HelloWorld * SOAP_FMAC4 soap_get_ns1__HelloWorld(struct soap*, ns1__HelloWorld *, const char*, const char*);

#define soap_new_ns1__HelloWorld(soap, n) soap_instantiate_ns1__HelloWorld(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__HelloWorld(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__HelloWorld * SOAP_FMAC2 soap_instantiate_ns1__HelloWorld(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__HelloWorld(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, const xsd__string *, const char*);
SOAP_FMAC3 xsd__string * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, xsd__string *, const char*);

#define soap_write_xsd__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__string * SOAP_FMAC4 soap_get_xsd__string(struct soap*, xsd__string *, const char*, const char*);

#define soap_new_xsd__string(soap, n) soap_instantiate_xsd__string(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__string * SOAP_FMAC2 soap_instantiate_xsd__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__byte_
#define SOAP_TYPE_xsd__byte_ (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__byte_(struct soap*, const char*, int, const xsd__byte_ *, const char*);
SOAP_FMAC3 xsd__byte_ * SOAP_FMAC4 soap_in_xsd__byte_(struct soap*, const char*, xsd__byte_ *, const char*);

#define soap_write_xsd__byte_(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__byte_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__byte_(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__byte_ * SOAP_FMAC4 soap_get_xsd__byte_(struct soap*, xsd__byte_ *, const char*, const char*);

#define soap_new_xsd__byte_(soap, n) soap_instantiate_xsd__byte_(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__byte_(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__byte_ * SOAP_FMAC2 soap_instantiate_xsd__byte_(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__byte_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyType(struct soap*, const char*, int, const xsd__anyType *, const char*);
SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_in_xsd__anyType(struct soap*, const char*, xsd__anyType *, const char*);

#define soap_write_xsd__anyType(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__anyType(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyType(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_get_xsd__anyType(struct soap*, xsd__anyType *, const char*, const char*);

#define soap_new_xsd__anyType(soap, n) soap_instantiate_xsd__anyType(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__anyType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__anyType * SOAP_FMAC2 soap_instantiate_xsd__anyType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__anyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__queryPRAXICON
#define SOAP_TYPE___ns1__queryPRAXICON (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__queryPRAXICON(struct soap*, struct __ns1__queryPRAXICON *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__queryPRAXICON(struct soap*, const struct __ns1__queryPRAXICON *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__queryPRAXICON(struct soap*, const char*, int, const struct __ns1__queryPRAXICON *, const char*);
SOAP_FMAC3 struct __ns1__queryPRAXICON * SOAP_FMAC4 soap_in___ns1__queryPRAXICON(struct soap*, const char*, struct __ns1__queryPRAXICON *, const char*);

#define soap_write___ns1__queryPRAXICON(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__queryPRAXICON(soap, data), 0) || soap_put___ns1__queryPRAXICON(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__queryPRAXICON(struct soap*, const struct __ns1__queryPRAXICON *, const char*, const char*);

#define soap_read___ns1__queryPRAXICON(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__queryPRAXICON(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns1__queryPRAXICON * SOAP_FMAC4 soap_get___ns1__queryPRAXICON(struct soap*, struct __ns1__queryPRAXICON *, const char*, const char*);

#define soap_new___ns1__queryPRAXICON(soap, n) soap_instantiate___ns1__queryPRAXICON(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__queryPRAXICON(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__queryPRAXICON * SOAP_FMAC2 soap_instantiate___ns1__queryPRAXICON(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__queryPRAXICON(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__HelloWorld
#define SOAP_TYPE___ns1__HelloWorld (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__HelloWorld(struct soap*, struct __ns1__HelloWorld *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__HelloWorld(struct soap*, const struct __ns1__HelloWorld *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__HelloWorld(struct soap*, const char*, int, const struct __ns1__HelloWorld *, const char*);
SOAP_FMAC3 struct __ns1__HelloWorld * SOAP_FMAC4 soap_in___ns1__HelloWorld(struct soap*, const char*, struct __ns1__HelloWorld *, const char*);

#define soap_write___ns1__HelloWorld(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__HelloWorld(soap, data), 0) || soap_put___ns1__HelloWorld(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__HelloWorld(struct soap*, const struct __ns1__HelloWorld *, const char*, const char*);

#define soap_read___ns1__HelloWorld(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__HelloWorld(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns1__HelloWorld * SOAP_FMAC4 soap_get___ns1__HelloWorld(struct soap*, struct __ns1__HelloWorld *, const char*, const char*);

#define soap_new___ns1__HelloWorld(soap, n) soap_instantiate___ns1__HelloWorld(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__HelloWorld(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__HelloWorld * SOAP_FMAC2 soap_instantiate___ns1__HelloWorld(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__HelloWorld(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTons1__queryPRAXICONResponse
#define SOAP_TYPE_PointerTons1__queryPRAXICONResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__queryPRAXICONResponse(struct soap*, ns1__queryPRAXICONResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__queryPRAXICONResponse(struct soap*, const char *, int, ns1__queryPRAXICONResponse *const*, const char *);
SOAP_FMAC3 ns1__queryPRAXICONResponse ** SOAP_FMAC4 soap_in_PointerTons1__queryPRAXICONResponse(struct soap*, const char*, ns1__queryPRAXICONResponse **, const char*);

#define soap_write_PointerTons1__queryPRAXICONResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__queryPRAXICONResponse(soap, data), 0) || soap_put_PointerTons1__queryPRAXICONResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__queryPRAXICONResponse(struct soap*, ns1__queryPRAXICONResponse *const*, const char*, const char*);

#define soap_read_PointerTons1__queryPRAXICONResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__queryPRAXICONResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__queryPRAXICONResponse ** SOAP_FMAC4 soap_get_PointerTons1__queryPRAXICONResponse(struct soap*, ns1__queryPRAXICONResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__queryPRAXICON
#define SOAP_TYPE_PointerTons1__queryPRAXICON (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__queryPRAXICON(struct soap*, ns1__queryPRAXICON *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__queryPRAXICON(struct soap*, const char *, int, ns1__queryPRAXICON *const*, const char *);
SOAP_FMAC3 ns1__queryPRAXICON ** SOAP_FMAC4 soap_in_PointerTons1__queryPRAXICON(struct soap*, const char*, ns1__queryPRAXICON **, const char*);

#define soap_write_PointerTons1__queryPRAXICON(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__queryPRAXICON(soap, data), 0) || soap_put_PointerTons1__queryPRAXICON(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__queryPRAXICON(struct soap*, ns1__queryPRAXICON *const*, const char*, const char*);

#define soap_read_PointerTons1__queryPRAXICON(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__queryPRAXICON(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__queryPRAXICON ** SOAP_FMAC4 soap_get_PointerTons1__queryPRAXICON(struct soap*, ns1__queryPRAXICON **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__HelloWorldResponse
#define SOAP_TYPE_PointerTons1__HelloWorldResponse (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__HelloWorldResponse(struct soap*, ns1__HelloWorldResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__HelloWorldResponse(struct soap*, const char *, int, ns1__HelloWorldResponse *const*, const char *);
SOAP_FMAC3 ns1__HelloWorldResponse ** SOAP_FMAC4 soap_in_PointerTons1__HelloWorldResponse(struct soap*, const char*, ns1__HelloWorldResponse **, const char*);

#define soap_write_PointerTons1__HelloWorldResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__HelloWorldResponse(soap, data), 0) || soap_put_PointerTons1__HelloWorldResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__HelloWorldResponse(struct soap*, ns1__HelloWorldResponse *const*, const char*, const char*);

#define soap_read_PointerTons1__HelloWorldResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__HelloWorldResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__HelloWorldResponse ** SOAP_FMAC4 soap_get_PointerTons1__HelloWorldResponse(struct soap*, ns1__HelloWorldResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__HelloWorld
#define SOAP_TYPE_PointerTons1__HelloWorld (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__HelloWorld(struct soap*, ns1__HelloWorld *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__HelloWorld(struct soap*, const char *, int, ns1__HelloWorld *const*, const char *);
SOAP_FMAC3 ns1__HelloWorld ** SOAP_FMAC4 soap_in_PointerTons1__HelloWorld(struct soap*, const char*, ns1__HelloWorld **, const char*);

#define soap_write_PointerTons1__HelloWorld(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__HelloWorld(soap, data), 0) || soap_put_PointerTons1__HelloWorld(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__HelloWorld(struct soap*, ns1__HelloWorld *const*, const char*, const char*);

#define soap_read_PointerTons1__HelloWorld(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__HelloWorld(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__HelloWorld ** SOAP_FMAC4 soap_get_PointerTons1__HelloWorld(struct soap*, ns1__HelloWorld **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons3__byteArray
#define SOAP_TYPE_PointerTons3__byteArray (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__byteArray(struct soap*, ns3__byteArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__byteArray(struct soap*, const char *, int, ns3__byteArray *const*, const char *);
SOAP_FMAC3 ns3__byteArray ** SOAP_FMAC4 soap_in_PointerTons3__byteArray(struct soap*, const char*, ns3__byteArray **, const char*);

#define soap_write_PointerTons3__byteArray(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons3__byteArray(soap, data), 0) || soap_put_PointerTons3__byteArray(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__byteArray(struct soap*, ns3__byteArray *const*, const char*, const char*);

#define soap_read_PointerTons3__byteArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons3__byteArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns3__byteArray ** SOAP_FMAC4 soap_get_PointerTons3__byteArray(struct soap*, ns3__byteArray **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__iitObject
#define SOAP_TYPE_PointerTons1__iitObject (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__iitObject(struct soap*, ns1__iitObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__iitObject(struct soap*, const char *, int, ns1__iitObject *const*, const char *);
SOAP_FMAC3 ns1__iitObject ** SOAP_FMAC4 soap_in_PointerTons1__iitObject(struct soap*, const char*, ns1__iitObject **, const char*);

#define soap_write_PointerTons1__iitObject(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__iitObject(soap, data), 0) || soap_put_PointerTons1__iitObject(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__iitObject(struct soap*, ns1__iitObject *const*, const char*, const char*);

#define soap_read_PointerTons1__iitObject(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__iitObject(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__iitObject ** SOAP_FMAC4 soap_get_PointerTons1__iitObject(struct soap*, ns1__iitObject **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__iitAction
#define SOAP_TYPE_PointerTons1__iitAction (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__iitAction(struct soap*, ns1__iitAction *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__iitAction(struct soap*, const char *, int, ns1__iitAction *const*, const char *);
SOAP_FMAC3 ns1__iitAction ** SOAP_FMAC4 soap_in_PointerTons1__iitAction(struct soap*, const char*, ns1__iitAction **, const char*);

#define soap_write_PointerTons1__iitAction(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__iitAction(soap, data), 0) || soap_put_PointerTons1__iitAction(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__iitAction(struct soap*, ns1__iitAction *const*, const char*, const char*);

#define soap_read_PointerTons1__iitAction(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__iitAction(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__iitAction ** SOAP_FMAC4 soap_get_PointerTons1__iitAction(struct soap*, ns1__iitAction **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__iitResponse
#define SOAP_TYPE_PointerTons1__iitResponse (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__iitResponse(struct soap*, ns1__iitResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__iitResponse(struct soap*, const char *, int, ns1__iitResponse *const*, const char *);
SOAP_FMAC3 ns1__iitResponse ** SOAP_FMAC4 soap_in_PointerTons1__iitResponse(struct soap*, const char*, ns1__iitResponse **, const char*);

#define soap_write_PointerTons1__iitResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__iitResponse(soap, data), 0) || soap_put_PointerTons1__iitResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__iitResponse(struct soap*, ns1__iitResponse *const*, const char*, const char*);

#define soap_read_PointerTons1__iitResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__iitResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__iitResponse ** SOAP_FMAC4 soap_get_PointerTons1__iitResponse(struct soap*, ns1__iitResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxsd__anyType
#define SOAP_TYPE_PointerToxsd__anyType (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__anyType(struct soap*, xsd__anyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__anyType(struct soap*, const char *, int, xsd__anyType *const*, const char *);
SOAP_FMAC3 xsd__anyType ** SOAP_FMAC4 soap_in_PointerToxsd__anyType(struct soap*, const char*, xsd__anyType **, const char*);

#define soap_write_PointerToxsd__anyType(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxsd__anyType(soap, data), 0) || soap_put_PointerToxsd__anyType(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__anyType(struct soap*, xsd__anyType *const*, const char*, const char*);

#define soap_read_PointerToxsd__anyType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__anyType(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__anyType ** SOAP_FMAC4 soap_get_PointerToxsd__anyType(struct soap*, xsd__anyType **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);

#define soap_write_PointerTostd__string(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data), 0) || soap_put_PointerTostd__string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfxsd__byte
#define SOAP_TYPE_std__vectorTemplateOfxsd__byte (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__byte(struct soap*, std::vector<char >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__byte(struct soap*, const std::vector<char >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__byte(struct soap*, const char*, int, const std::vector<char >*, const char*);
SOAP_FMAC3 std::vector<char >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__byte(struct soap*, const char*, std::vector<char >*, const char*);

#define soap_new_std__vectorTemplateOfxsd__byte(soap, n) soap_instantiate_std__vectorTemplateOfxsd__byte(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxsd__byte(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<char > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__byte(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxsd__byte(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons3__byteArray
#define SOAP_TYPE_std__vectorTemplateOfPointerTons3__byteArray (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons3__byteArray(struct soap*, std::vector<ns3__byteArray * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons3__byteArray(struct soap*, const std::vector<ns3__byteArray * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons3__byteArray(struct soap*, const char*, int, const std::vector<ns3__byteArray * >*, const char*);
SOAP_FMAC3 std::vector<ns3__byteArray * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons3__byteArray(struct soap*, const char*, std::vector<ns3__byteArray * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTons3__byteArray(soap, n) soap_instantiate_std__vectorTemplateOfPointerTons3__byteArray(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTons3__byteArray(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<ns3__byteArray * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons3__byteArray(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons3__byteArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__iitAction
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__iitAction (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__iitAction(struct soap*, std::vector<ns1__iitAction * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__iitAction(struct soap*, const std::vector<ns1__iitAction * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__iitAction(struct soap*, const char*, int, const std::vector<ns1__iitAction * >*, const char*);
SOAP_FMAC3 std::vector<ns1__iitAction * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__iitAction(struct soap*, const char*, std::vector<ns1__iitAction * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTons1__iitAction(soap, n) soap_instantiate_std__vectorTemplateOfPointerTons1__iitAction(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTons1__iitAction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<ns1__iitAction * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__iitAction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__iitAction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerToxsd__anyType
#define SOAP_TYPE_std__vectorTemplateOfPointerToxsd__anyType (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToxsd__anyType(struct soap*, std::vector<xsd__anyType * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToxsd__anyType(struct soap*, const std::vector<xsd__anyType * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToxsd__anyType(struct soap*, const char*, int, const std::vector<xsd__anyType * >*, const char*);
SOAP_FMAC3 std::vector<xsd__anyType * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToxsd__anyType(struct soap*, const char*, std::vector<xsd__anyType * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerToxsd__anyType(soap, n) soap_instantiate_std__vectorTemplateOfPointerToxsd__anyType(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerToxsd__anyType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xsd__anyType * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToxsd__anyType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerToxsd__anyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
